<!--
    Copyright (c) 2021, the hapjs-platform Project Contributors
    SPDX-License-Identifier: Apache-2.0
-->

<template>
  <div>
  </div>
</template>

<script>
  // 引入全部接口
  import system from '@system'
  // 示例接口
  import sample from '@system.sample'
  // 可实例化的模块
  import Class1 from '@system.Class1'
  // 支持通过create方法创建实例的模块
  import websocketfactory from '@system.websocketfactory'
  // 支持通过create方法创建实例，且支持多回调的模块
  import ad from '@service.ad'

  export default {
    data: {
    },
    onInit () {
      this.system = system
      this.sample = sample
      this.Class1 = Class1
      this.websocketfactory = websocketfactory
      this.ad = ad
    },
    // 读写
    opsTestReadwrite () {
      sample.readwrite = 'readwrite-v2'
      const readwrite = sample.readwrite
      return readwrite
    },
    opsTestAttrReadwrite () {
      return sample.getAttr('readwrite')
    },
    // 只读
    opsTestReadonly () {
      sample.readonly = 'readonly-v2'
      const readonly = sample.readonly
      return readonly
    },
    opsTestAttrReadonly () {
      return sample.getAttr('readonly')
    },
    // 只写
    opsTestWriteonly () {
      sample.writeonly = 'writeonly-v2'
      const writeonly = sample.writeonly
      return writeonly
    },
    opsTestAttrWriteonly () {
      return sample.getAttr('writeonly')
    },

    // 事件
    opsTestCustomEvent1 () {
      return (sample.onCustomEvent1 = function (ret) {
        this.onCustomEvent1Result = ret
      }.bind(this))
    },
    // 事件：删除回调
    opsTestCustomEvent1Clear () {
      return (sample.onCustomEvent1 = null)
    },
    // 事件：赋值对象会警告并不生效
    opsTestCustomEvent1Object () {
      return (sample.onCustomEvent1 = {})
    }
  }
</script>